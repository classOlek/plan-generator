@model TimetableConfig
@{
    ViewData["Title"] = "TimetableConfig";
}

<link rel="stylesheet" href="~/css/modal.css" />
<link rel="stylesheet" href="~/css/timetable.css" />
<link rel="stylesheet" href="~/css/simTree.css" />

<script>
    var currentId = 1;
    function removeElement(id) {
        var element = document.getElementById(id);
        element.parentNode.removeChild(element);
    }

    function saveSettings(elementId) {
        var saveButton = document.getElementById('saveButton');
        saveButton.disabled = true;
        var element = document.getElementById(elementId);
        var children = element.children;
        var returnJson = [];
        for (var i = 0; i < children.length; i++) {
            if (children[i].classList.contains('noClassesBefore')) {
                var selectList = $(children[i]).find('select');
                returnJson.push({ 'type': 'noClassesBefore', 'day': selectList.eq(1).val(), 'hour': selectList.eq(0).val() });
            } else if (children[i].classList.contains('noClassesAfter')) {
                var selectList = $(children[i]).find('select');
                returnJson.push({ 'type': 'noClassesAfter', 'day': selectList.eq(1).val(), 'hour': selectList.eq(0).val() });
            }
        }
        document.getElementById('saveFormData').value = JSON.stringify(returnJson);
        document.getElementById('saveForm').submit();
    }

</script>

<script src="~/js/conditionsUIGenerator.js"></script>
<script src="~/js/simTree.js"></script>

<form method="POST" action="/api/account/updateConditions" id="saveForm">
    <input type="hidden" name="saveFormData" id="saveFormData" value="[]">
    <input name="shouldRedirect" type="hidden" id="shouldRedirect" value="1">
</form>

<div class="container">
    <div class="row">
        <div class="col-12 col-xl-6">
            <div class="container">
                <div class="row">
                    <table class="table" style="border: 1px solid rgba(0, 0, 0, 0.125); padding: 0.75rem 1.25rem;">
                        <thead>
                            <tr>
                                <th scope="col" class="col-1">#</th>
                                <th scope="col">Source</th>
                                <th scope="col" class="col-2">Groups</th>
                                <th scope="col" class="col-1">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 1; i <= Model.TimetableDataList.Count(); i++)
                            {
                                <tr style="border: 1px solid rgba(0, 0, 0, 0.125);">
                                    <th scope="row" style="font-size: 10px;">@i</th>
                                    <td style="font-size: 10px;">@Model.TimetableDataList.ElementAt(i - 1).SourceName</td>
                                    <td style="font-size: 10px;">@Model.TimetableDataList.ElementAt(i - 1).CourseList.Count()</td>
                                    <td><input type="submit" onclick="showModal(@Model.TimetableDataList.ElementAt(i - 1).HashCode)" class="btn btn-primary" value=">" /></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col">
                        <button id="addSourceButton" class="btn btn-primary" onclick="showAddNewDataSource();" style="width: 100%">Add New Data Source</button>
                    </div>
                </div>
            </div>
            <hr style="border-top: 1px solid #8c8b8b;" />
        </div>

        <div class="col-12 col-xl-6" style="background-color:none;">
            <ul id="sortable" class="list-group"></ul>
            <div class="container" style="padding-top: 20px;">
                <div class="row">
                    <div class="col">
                        <button id="saveButton" class="btn btn-primary" onclick="saveSettings('sortable');" style="width: 100%">Save</button>
                    </div>
                    <div class="col">
                        <div class="dropdown">
                            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="width: 100%">
                                Add condition
                            </button>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                <a class="dropdown-item" onclick="addNoClassesBefore(currentId++, 'sortable', 'Monday', '8:00');">No classes before</a>
                                <a class="dropdown-item" onclick="addNoClassesAfter(currentId++, 'sortable', 'Monday', '8:00');">No classes after</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <hr style="border-top: 1px solid #8c8b8b;" />
        </div>
    </div>
</div>

<div id="myModal" class="modal">
    <div class="modal-content" style="min-width: 322px;">
        <div id="closeModal" class="close2">&times;</div>
        <div id="actual-modal-content"><p>Some text in the Modal..</p></div>
    </div>
</div>

<div id="addSource" style="display: none;">
    <form name="form1" method="post" enctype="multipart/form-data" action="api/timetable/uploadCourses">
        Select data source file: <div>
            <input name="file" type="file" />
        </div>
        <div>
            <input type="submit" class="btn btn-primary" value="Submit" />
        </div>
    </form>
</div>

<div id="timetableBase" style="display: none;">
    <div id="schedule-wrap">
        <div class="" id="schedule">
            <div id="schedule-main">
                <div id="days">
                    <div>Monday</div>
                    <div>Tuesday</div>
                    <div>Wednesday</div>
                    <div>Thursday</div>
                    <div>Friday</div>
                </div>
                <div id="hours">
                    <div>07:00</div>
                    <div>08:00</div>
                    <div>09:00</div>
                    <div>10:00</div>
                    <div>11:00</div>
                    <div>12:00</div>
                    <div>13:00</div>
                    <div>14:00</div>
                    <div>15:00</div>
                    <div>16:00</div>
                    <div>17:00</div>
                    <div>18:00</div>
                    <div>19:00</div>
                    <div>20:00</div>
                    <div>21:00</div>
                </div>
                <div class="day" id="dayMonday">
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                </div>
                <div class="day" id="dayTuesday">
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                </div>
                <div class="day" id="dayWednesday">
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                </div>
                <div class="day" id="dayThursday">
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                </div>
                <div class="day" id="dayFriday">
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                    <span class="sep"></span>
                </div>
            </div>
        </div>
        <div id="legend">
            <span class="c_W">Wykład</span>
            <span class="c_C">Ćwiczenia</span>
            <span class="c_S">Seminarium</span>
            <span class="c_L">Zajęcia laboratoryjne</span>
            <span class="c_P">Projekt</span>
            <span class="c_X">Inne</span>
        </div>
    </div>

</div>

<script>
    var isResponsive = false;
    var modal = document.getElementById("myModal");
    var btn = document.getElementById("myBtn");
    var span2 = document.getElementById("closeModal");
    var content = document.getElementById("actual-modal-content");
    var timetableBase = document.getElementById("timetableBase");
    var addSource = document.getElementById("addSource");

    var hoursFrom = 7;
    var hoursTo = 21;

    var timetableData = null;
    var timetableCurrent = 0;
    var timetableDisplay = false;

    var tree;
    var lecturersData = [];

    function generateTree(data, element) {
        let myData2 = [];
        let x = 1;
        data.forEach(course => {
            myData2.push({
                "id": course.courseCode,
                "pid": '',
                "name": course.courseName,
                "checked": "checked"
            });
            course['lecturerSettings'].forEach(prow => {
                myData2.push({
                    "id": x++,
                    "pid": course.courseCode,
                    "name": prow['lecturer']
                });
            });
        });

        tree = simTree({
            el: element,
            data: function (obj, callback) {
                callback(myData2);
            },
            check: true,
            linkParent: true,
            onClick: function (item) {

            },
            onChange: function (item) {

            }
        });

        x = 1;
        data.forEach(course => {
            course['lecturerSettings'].forEach(prow => {
                if (prow['isBlocked']) {
                    x++;
                } else {
                    tree.setSelected(x++);
                }
            });
        });
    }

    function showAddNewDataSource() {
        content.innerHTML = addSource.innerHTML;
        modal.style.display = "block";
    };

    function showModal(hashCode) {
        content.innerHTML = '<strong>Loading...</strong>';
        modal.style.display = "block";
        fetch(window.location.protocol + "//" + window.location.hostname + ":" + window.location.port + "/api/timetable/getCourseData?hashCode=" + hashCode)
            .then(data => data.json())
            .then(data => {
                if (data['response'] == 'success') {
                    content.innerHTML = '<div id="tree"></div><input type="submit" onclick="generateTimetable(' + hashCode + ')" class="btn btn-primary" value="Generate" />';
                    lecturersData = data['data'];
                    generateTree(data['data'], "#tree");
                } else {
                    throw 'error';
                }
            })
            .catch(a => content.innerHTML = "something went wrong" + a);
    };

    function unblockLecturer(courseCode, lecturer) {
        try {
            lecturersData.forEach(data => {
                if (data['courseCode'] === courseCode) {
                    data['lecturerSettings'].forEach(lec => {
                        if (lec['lecturer'] === lecturer) {
                            lec['isBlocked'] = false;
                            throw BreakException;
                        }
                    });
                }
            });
        } catch (e) { }
    }

    function getUpdatedLecturersData() {
        if (tree.getSelected().length > 1) {
            lecturersData.forEach(data => {
                data['lecturerSettings'].forEach(lecturer => {
                    lecturer['isBlocked'] = true;
                });
            });
            tree.getSelected().forEach(element => {
                if (element['pid'] !== "") {
                    let courseCode = element['pid'];
                    let lecturer = element['name'];
                    unblockLecturer(courseCode, lecturer);
                };
            });
        }
        return lecturersData;
    }

    function generateTimetable(hashCode) {
        content.innerHTML = '<strong>Loading...</strong>';
        modal.style.display = "block";
        fetch(window.location.protocol + "//" + window.location.hostname + ":" + window.location.port + "/api/timetable/generateTimetable?hashCode=" + hashCode,
            {
                method: "POST",
                body: JSON.stringify(getUpdatedLecturersData()),
                headers: {
                    "Content-Type": "application/json"
                }
            })
            .then(data => data.json())
            .then(data => {
                if (data['response'] == 'success') {
                    content.innerHTML = '<nav aria-label="..."> <ul class="pagination"> <li class="page-item"> <button class="page-link" onclick="prevTimetable()" tabindex="-1"><<</button> </li> <li class="page-item disabled"> <button id="curTim" class="page-link">0/0</button> </li> <li class="page-item"> <button class="page-link" onclick="nextTimetable()">>></button> </li> </ul> </nav><div id="timCont"></div><div id="timContImg"></div>';
                    timetableData = data['data'];
                    timetableCurrent = 1;
                    prevTimetable();
                    timetableDisplay = true;
                } else {
                    throw 'error';
                }
            })
            .catch(a => content.innerHTML = "something went wrong" + a);
    }

    function nextTimetable() {
        if (timetableCurrent + 1 < timetableData.length && timetableCurrent + 1 >= 0) {
            showTimetable(++timetableCurrent);
        }
    };

    function prevTimetable() {
        if (timetableCurrent - 1 < timetableData.length && timetableCurrent - 1 >= 0) {
            showTimetable(--timetableCurrent);
        }
    };

    function generateEntry(entryData) {
        var baseDatetime = new Date('1970-01-01T07:00:00Z');
        var hourString = entryData['godzina'].split(" ")[1].split(",")[0];
        var splitted = hourString.split("-");
        var startHour = splitted[0];
        var endHour = splitted[1];
        var startDatetime = new Date('1970-01-01T' + startHour + ':00Z');
        var endDatetime = new Date('1970-01-01T' + endHour + ':00Z');
        var top = ((startDatetime.getTime() - baseDatetime.getTime()) / 60000 / 5) * 4;
        var height = ((endDatetime.getTime() - startDatetime.getTime()) / 60000 / 5) * 4 - 4;
        var building = "";
        try {
            building = entryData['godzina'].split("bud. ")[1].split(", ")[0];
        } catch (e) {

        }
        var room = "";
        try {
            room = entryData['godzina'].split("sala ")[1];
        } catch (e) {

        }
        var buildingString = `${building} / ${room}`;
        var prowadzacy = entryData['prowadzacy'];
        var stan = entryData['stan'];
        var courseName = entryData['courseName'];

        var week = entryData['godzina'].split(" ")[0];
        var weekString = "";
        var weekClass = "";
        if (week.includes("TP")) {
            var weekString = " | TP";
            var weekClass = " w_2";
        } else if (week.includes("TN")) {
            var weekString = " | TN";
            var weekClass = " w_1";
        }

        var typeString = "c_X";
        if (entryData['typ'] == "Wykład") {
            typeString = "c_W";
        } else if (entryData['typ'] == "Ćwiczenia") {
            typeString = "c_C";
        } else if (entryData['typ'] == "Seminarium") {
            typeString = "c_S";
        } else if (entryData['typ'] == "Zajęcia laboratoryjne") {
            typeString = "c_L";
        } else if (entryData['typ'] == "Projekt") {
            typeString = "c_P";
        }

        var entryDiv = document.createElement("div");
        entryDiv.className = "entry";
        entryDiv.style = `top: ${top}px; height: ${height}px`;
        var insideDiv = document.createElement("div");
        entryDiv.append(insideDiv);
        insideDiv.className = `${typeString}${weekClass} wrap`;
        var hDiv = document.createElement("div");
        var nDiv = document.createElement("div");
        var lDiv = document.createElement("div");
        var pDiv = document.createElement("div");
        var tDiv = document.createElement("div");
        hDiv.className = "h";
        nDiv.className = "n";
        lDiv.className = "l";
        pDiv.className = "p";
        tDiv.className = "t";
        hDiv.innerHTML = `${hourString}${weekString}`;
        nDiv.innerHTML = courseName;
        lDiv.innerHTML = buildingString;
        pDiv.innerHTML = prowadzacy;
        tDiv.innerHTML = stan;
        insideDiv.append(hDiv);
        insideDiv.append(nDiv);
        insideDiv.append(lDiv);
        insideDiv.append(pDiv);
        insideDiv.append(tDiv);
        return entryDiv;
    }

    function showTimetable(index) {
        document.getElementById('curTim').innerHTML = (index + 1) + '/' + timetableData.length;
        document.getElementById('timCont').innerHTML = JSON.stringify(timetableData[index]);
        document.getElementById('timCont').innerHTML = timetableBase.innerHTML;
        var dayMonday = document.getElementById('dayMonday');
        var dayTuesday = document.getElementById('dayTuesday');
        var dayWednesday = document.getElementById('dayWednesday');
        var dayThursday = document.getElementById('dayThursday');
        var dayFriday = document.getElementById('dayFriday');
        for (var i = 0; i < timetableData[index]['groupList'].length; i++) {
            var data = timetableData[index]['groupList'][i];
            var entry = generateEntry(data);
            if (data['godzina'].includes("pn")) {
                dayMonday.append(entry);
            } else if (data['godzina'].includes("wt")) {
                dayTuesday.append(entry);
            } else if (data['godzina'].includes("śr")) {
                dayWednesday.append(entry);
            } else if (data['godzina'].includes("cz")) {
                dayThursday.append(entry);
            } else if (data['godzina'].includes("pt")) {
                dayFriday.append(entry);
            }
        }

        if (isResponsive) {
            document.getElementById('timCont').hidden = false;
            html2canvas(document.getElementById('timCont'),{
                scrollX: 0,
                scrollY: 0,
                width: 1000,
                height: 1000
            }).then(can => {
                console.log('t');
                var canvasImg = can.toDataURL("image/jpg");
                $('#timContImg').html('<img src="' + canvasImg + '" alt="" style="width: 100%; height:auto;">');
            });
            document.getElementById('timCont').hidden = true;
        }
    };

    document.onkeydown = function (e) {
        switch (e.keyCode) {
            case 37:
                if (timetableDisplay) {
                    prevTimetable();
                };
                break;
            case 39:
                if (timetableDisplay) {
                    nextTimetable();
                };
                break;
        }
    };

    span2.onclick = function () {
        timetableDisplay = false;
        modal.style.display = "none";
    }
</script>

<script>
    function addCondition(condition) {
        if (condition.type == 'noClassesAfter') {
            addNoClassesAfter(currentId++, 'sortable', condition.day, condition.hour);
        } else if (condition.type == 'noClassesBefore') {
            addNoClassesBefore(currentId++, 'sortable', condition.day, condition.hour);
        }
    }

    var conditions = JSON.parse('@Html.Raw(@Model.User.Conditions)');
    conditions.forEach(condition => addCondition(condition));
    $("#sortable").sortable();
</script>