@model TimetableConfig
@{
    ViewData["Title"] = "TimetableConfig";
}

<link rel="stylesheet" href="~/css/modal.css" />
<link rel="stylesheet" href="~/css/simplePagination.css" />

<script>
    var currentId = 1;
    function removeElement(id) {
        var element = document.getElementById(id);
        element.parentNode.removeChild(element);
    }

    function saveSettings(elementId) {
        var saveButton = document.getElementById('saveButton');
        saveButton.disabled = true;
        var element = document.getElementById(elementId);
        var children = element.children;
        var returnJson = [];
        for (var i = 0; i < children.length; i++) {
            if (children[i].classList.contains('noClassesBefore')) {
                var selectList = $(children[i]).find('select');
                returnJson.push({ 'type': 'noClassesBefore', 'day': selectList.eq(1).val(), 'hour': selectList.eq(0).val() });
            } else if (children[i].classList.contains('noClassesAfter')) {
                var selectList = $(children[i]).find('select');
                returnJson.push({ 'type': 'noClassesAfter', 'day': selectList.eq(1).val(), 'hour': selectList.eq(0).val() });
            }
        }
        document.getElementById('saveFormData').value = JSON.stringify(returnJson);
        document.getElementById('saveForm').submit();
    }

</script>

<script src="~/js/pagination.js"></script>
<script src="~/js/conditionsUIGenerator.js"></script>

<form method="POST" action="/api/account/updateConditions" id="saveForm">
    <input type="hidden" name="saveFormData" id="saveFormData" value="[]">
</form>

<div class="container">
    <div class="row">
        <div class="col-md-5 panel">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Source</th>
                        <th scope="col">Time</th>
                        <th scope="col">Groups</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 1; i <= Model.TimetableDataList.Count(); i++)
                    {
                        <tr>
                            <th scope="row">@i</th>
                            <td>@Model.TimetableDataList.ElementAt(i - 1).SourceName</td>
                            <td>@Model.TimetableDataList.ElementAt(i - 1).Time</td>
                            <td>@Model.TimetableDataList.ElementAt(i - 1).CourseList.Count()</td>
                            <td><input type="submit" onclick="showModal(@Model.TimetableDataList.ElementAt(i - 1).HashCode)" class="btn btn-primary" value=">" /></td>
                        </tr>
                    }
                </tbody>
            </table>
            <hr style="border-top: 1px solid #8c8b8b;" />
            <form name="form1" method="post" enctype="multipart/form-data" action="api/timetable/uploadCourses">
                Add new data source: <div>
                    <input name="file" type="file" />
                </div>
                <div>
                    <input type="submit" class="btn btn-primary" value="Submit" />
                </div>
            </form>
        </div>

        <div class="col-md-7" style="background-color:none;">
            <ul id="sortable" class="list-group"></ul>
            <button id="saveButton" class="btn btn-primary" onclick="saveSettings('sortable');">Save</button>
            <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Add condition
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item" onclick="addNoClassesBefore(currentId++, 'sortable', 'Monday', '8:00');">No classes before</a>
                    <a class="dropdown-item" onclick="addNoClassesAfter(currentId++, 'sortable', 'Monday', '8:00');">No classes after</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="myModal" class="modal">
    <div class="modal-content">
        <div id="closeModal" class="close2">&times;</div>
        <div id="actual-modal-content"><p>Some text in the Modal..</p></div>
    </div>
</div>

<script>
    var modal = document.getElementById("myModal");
    var btn = document.getElementById("myBtn");
    var span2 = document.getElementById("closeModal");
    var content = document.getElementById("actual-modal-content");

    var timetableData = null;
    var timetableCurrent = 0;
    var timetableDisplay = false;

    function showModal(hashCode) {
        content.innerHTML = '<strong>Loading...</strong>';
        modal.style.display = "block";
        fetch(window.location.protocol + "//" + window.location.hostname + ":" + window.location.port + "/api/timetable/getCourseData?hashCode=" + hashCode)
            .then(data => data.json())
            .then(data => {
                if (data['response'] == 'success') {
                    content.innerHTML = hashCode + "<br>" +
                        '<input type="submit" onclick="generateTimetable(' + hashCode + ')" class="btn btn-primary" value="Generate" />';
                } else {
                    throw 'error';
                }
            })
            .catch(a => content.innerHTML = "something went wrong");
    };

    function generateTimetable(hashCode) {
        content.innerHTML = '<strong>Loading...</strong>';
        modal.style.display = "block";
        fetch(window.location.protocol + "//" + window.location.hostname + ":" + window.location.port + "/api/timetable/generateTimetable?hashCode=" + hashCode)
            .then(data => data.json())
            .then(data => {
                if (data['response'] == 'success') {
                    content.innerHTML = '<nav aria-label="..."> <ul class="pagination"> <li class="page-item"> <button class="page-link" onclick="prevTimetable()" tabindex="-1"><<</button> </li> <li class="page-item disabled"> <button id="curTim" class="page-link">3/10</button> </li> <li class="page-item"> <button class="page-link" onclick="nextTimetable()">>></button> </li> </ul> </nav><div id="timCont"></div>';
                    timetableData = data['data'];
                    timetableCurrent = 1;
                    prevTimetable();
                    timetableDisplay = true;
                } else {
                    throw 'error';
                }
            })
            .catch(a => content.innerHTML = "something went wrong");
    }

    function nextTimetable() {
        if (timetableCurrent + 1 < timetableData.length && timetableCurrent + 1 >= 0) {
            showTimetable(++timetableCurrent);
        }
    };

    function prevTimetable() {
        if (timetableCurrent - 1 < timetableData.length && timetableCurrent - 1 >= 0) {
            showTimetable(--timetableCurrent);
        }
    };

    function showTimetable(index) {
        document.getElementById('curTim').innerHTML = (index + 1) + '/' + timetableData.length;
        document.getElementById('timCont').innerHTML = JSON.stringify(timetableData[index]);
    };

    document.onkeydown = function(e) {
        switch (e.keyCode) {
            case 37:
                if (timetableDisplay) {
                    prevTimetable();
                };
                break;
            case 39:
                if (timetableDisplay) {
                    nextTimetable();
                };
                break;
        }
    };

    span2.onclick = function () {
        timetableDisplay = false;
        modal.style.display = "none";
    }
    /*window.onclick = function(event) {
      if (event.target == modal) {
        modal.style.display = "none";
      }
    }*/
</script>

<script>
    function addCondition(condition) {
        if (condition.type == 'noClassesAfter') {
            addNoClassesAfter(currentId++, 'sortable', condition.day, condition.hour);
        } else if (condition.type == 'noClassesBefore') {
            addNoClassesBefore(currentId++, 'sortable', condition.day, condition.hour);
        }
    }

    var conditions = JSON.parse('@Html.Raw(@Model.User.Conditions)');
    conditions.forEach(condition => addCondition(condition));
    $("#sortable").sortable();
</script>